{"version":3,"sources":["exercices/decorator/index.ts"],"names":[],"mappings":"AAAA,IAAA,KAAA;AAAA;AAAA,YAAA;AAIE,WAAA,KAAA,CAAY,KAAZ,EAAmC;AAAnC,QAAA,KAAA,GAAA,IAAA;;AACE,SAAK,KAAL,GAAa,KAAb;AACA,SAAK,MAAL,GAAc,EAAd;AAEA,QAAI,YAAY,GAAG,QAAQ,CAAC,aAAT,CAAuB,GAAvB,CAAnB;AACA,IAAA,YAAY,CAAC,SAAb,GAAyB,aAAzB;AACA,SAAK,KAAL,CAAW,UAAX,CAAsB,YAAtB,CAAmC,YAAnC,EAAiD,KAAK,KAAL,CAAW,WAA5D;AAEA,SAAK,KAAL,CAAW,gBAAX,CAA4B,OAA5B,EAAqC,YAAA;AACnC,MAAA,KAAI,CAAC,MAAL,GAAc,EAAd;;AACA,MAAA,KAAI,CAAC,QAAL;;AACA,MAAA,YAAY,CAAC,SAAb,GAAyB,KAAI,CAAC,MAAL,CAAY,CAAZ,KAAkB,EAA3C;AACD,KAJD;AAKD;;AAED,EAAA,KAAA,CAAA,SAAA,CAAA,QAAA,GAAA,YAAA,CAAa,CAAb;;AACF,SAAA,KAAA;AApBA,CAAA,EAAA;;AAsBA,SAAS,sBAAT,CAAgC,KAAhC,EAA4C;AAC1C,MAAI,QAAQ,GAAG,KAAK,CAAC,QAArB;;AACA,EAAA,KAAK,CAAC,QAAN,GAAiB,YAAA;AACf,IAAA,QAAQ;AACR,QAAI,KAAK,GAAG,KAAK,CAAC,KAAN,CAAY,KAAxB;;AACA,QAAI,CAAC,KAAL,EAAY;AACV,MAAA,KAAK,CAAC,MAAN,CAAa,IAAb,CAAkB,WAAlB;AACD;AACF,GAND;;AAQA,SAAO,KAAP;AACD;;AAGD,SAAS,mBAAT,CAA6B,KAA7B,EAAyC;AACvC,MAAI,QAAQ,GAAG,KAAK,CAAC,QAArB;;AACA,EAAA,KAAK,CAAC,QAAN,GAAiB,YAAA;AACf,IAAA,QAAQ;AACR,QAAI,KAAK,GAAG,KAAK,CAAC,KAAN,CAAY,KAAxB;;AACA,QAAI,KAAK,CAAC,OAAN,CAAc,GAAd,MAAuB,CAAC,CAA5B,EAA+B;AAC7B,MAAA,KAAK,CAAC,MAAN,CAAa,IAAb,CAAkB,mBAAlB;AACD;AACF,GAND;;AAQA,SAAO,KAAP;AACD;;AAED,IAAI,KAAK,GAAG,IAAI,KAAJ,CAAU,QAAQ,CAAC,aAAT,CAAuB,QAAvB,CAAV,CAAZ;AACA,KAAK,GAAG,sBAAsB,CAAC,KAAD,CAA9B;AACA,KAAK,GAAG,mBAAmB,CAAC,KAAD,CAA3B","file":"decorator.c32e96a0.js","sourceRoot":"..","sourcesContent":["class Field {\r\n  errors: string[]\r\n  input: HTMLInputElement\r\n\r\n  constructor(input: HTMLInputElement) {\r\n    this.input = input\r\n    this.errors = []\r\n\r\n    let errorMessage = document.createElement('p')\r\n    errorMessage.className = 'text-danger'\r\n    this.input.parentNode.insertBefore(errorMessage, this.input.nextSibling)\r\n\r\n    this.input.addEventListener('input', () => {\r\n      this.errors = []\r\n      this.validate()\r\n      errorMessage.innerText = this.errors[0] || ''\r\n    })\r\n  }\r\n\r\n  validate() {}\r\n}\r\n\r\nfunction RequiredFieldDecorator(field: Field): Field {\r\n  let validate = field.validate\r\n  field.validate = function () {\r\n    validate()\r\n    let value = field.input.value\r\n    if (!value) {\r\n      field.errors.push('Requerido')\r\n    }\r\n  }\r\n\r\n  return field\r\n}\r\n\r\n\r\nfunction EmailFieldDecorator(field: Field): Field {\r\n  let validate = field.validate\r\n  field.validate = function () {\r\n    validate()\r\n    let value = field.input.value\r\n    if (value.indexOf('@') === -1) {\r\n      field.errors.push('Debe ser un email')\r\n    }\r\n  }\r\n\r\n  return field\r\n}\r\n\r\nlet field = new Field(document.querySelector('#email'))\r\nfield = RequiredFieldDecorator(field)\r\nfield = EmailFieldDecorator(field)"]}